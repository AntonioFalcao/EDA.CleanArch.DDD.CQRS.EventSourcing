name: build and test

on:
  workflow_call:
    inputs:
      project:
        description: 'The *csproj project path passed from the caller workflow'
        required: true
        type: string
      test:
        description: 'The *csproj test path passed from the caller workflow'
        required: true
        type: string

jobs:
  build-and-test:
    name: build-and-test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget  

      - name: Install dependencies
        working-directory: ${{ inputs.project }}
        run: dotnet restore

      - name: Build
        working-directory: ${{ inputs.project }}
        run: dotnet build --configuration Release --no-restore

      - name: Test
        working-directory: ${{ inputs.test }}
        run: dotnet test --no-restore --verbosity normal

  analyze:
    name: Code Security Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
