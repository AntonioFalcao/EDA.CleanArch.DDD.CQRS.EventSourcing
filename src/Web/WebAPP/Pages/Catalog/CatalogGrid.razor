@inherits FluxorComponent

@using WebAPP.ViewModels
@using Contracts.Services.Catalog
@using Contracts.Abstractions.Paging
@using WebAPP.Models
@using System.ComponentModel

@using WebAPP.Pages.Catalog.Store

@inject IState<CatalogStore.CatalogState> CatalogState

<div class="row row-cols-md-4">
    @foreach (var card in _catalogs)
    {
        <BSCol MarginTopAndBottom="Margins.ExtraSmall" Padding="Padding.None">
            <CatalogCard Catalog="card" />
        </BSCol>
    }
</div>
@*<BSPagination Align="Align.Center">
    <BSPaginationItem IsDisabled="@(CatalogState.Page.HasPrevious is false)" @onclick="MoveToPreviewAsync">Previous</BSPaginationItem>
    @for (var paging = 1; paging <= CatalogState.Page.Current; paging++)
    {
        var current = paging;
        <BSPaginationItem @onclick="() => MoveToPageAsync(current)">@current</BSPaginationItem>
    }
    <BSPaginationItem IsDisabled="@(CatalogState.Page.HasNext is false)" @onclick="MoveToNextAsync">Next</BSPaginationItem>
</BSPagination>*@


@code {
    private List<CatalogModel> _catalogs => CatalogState.Value.Catalogs;
}